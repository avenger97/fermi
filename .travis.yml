#include<Servo.h>
Servo throttle;

int set_speed=A1;
int time_gap;
int pwm_duty=11;
int throttle_value=10;
int vehicle_speed=A2;

int ACC_off=2;
int ACC_standby=3;
int ACC_on=4;

int acc_on;
int acc_off;
int acc_standby;
int cm = 0;

void setup()
{
  Serial.begin(9600);
  pinMode(set_speed,INPUT);
  pinMode(vehicle_speed,INPUT);
  pinMode(ACC_off,INPUT);
  pinMode(ACC_standby,INPUT);
  pinMode(ACC_on,INPUT);
  
  
  pinMode(pwm_duty,OUTPUT);//ABS 
  throttle.attach(10);//servo rotate
}
long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  return pulseIn(echoPin, HIGH);
}


void loop()
{
  acc_on=digitalRead(ACC_on);
  acc_off=digitalRead(ACC_off);
  acc_standby=digitalRead(ACC_standby);
  
  cm = 0.01723 * readUltrasonicDistance(7, 7);
   Serial.println(cm);
    
  int Vs_raw=analogRead(vehicle_speed);
  int setv_raw=analogRead(set_speed);
  
  
   
  
  
  
  if(acc_on==LOW && acc_off==HIGH && acc_standby==HIGH)
  {
  int Vs=map(Vs_raw,0,1023,0,160);
  int setv=map(setv_raw,0,1023,0,160);
  time_gap=cm/Vs;
   
    
    
    
  
  
  
  }
   if(acc_on==HIGH && acc_off==HIGH && acc_standby==LOW){
	  
  
  
  
  }
   if(acc_on==HIGH && acc_off==LOW && acc_standby==HIGH){
  
  
  
  
  }
  
}
